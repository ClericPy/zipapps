<?xml version="1.0" standalone="no"?><?xml-stylesheet type="text/css" href="https://www.processon.com/themes/default/mind/icons/icons.css" ?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xlink="http://www.w3.org/1999/xlink" id="mind-svg-con" version="1.1" width="2014.90625px" height="650px" style="position: absolute; left: 0px; top: 0px; width: 2014.91px; height: 650px; background: rgb(248, 248, 248); z-index: 999;"><defs></defs><g id="svgbackgroundid"><defs></defs><rect x="0" y="0" width="2014.90625" height="650" fill="#f8f8f8"></rect></g><g transform="translate(-8991.09375, -9616)" id="sdjakdjak15"><defs></defs><g class="svg-topic-con" transform="translate(0.5,0.5)"><path part="right" sub="true" id="line_4eaf751f7cd5" d="M 10000 9941 C 10000 9941 10010 9662 10193 9662" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="right" sub="true" id="line_f933e667185a" d="M 10000 9941 C 10000 9941 10010 9744.5 10193 9744.5" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="right" sub="true" id="line_d4aab9e1731f" d="M 10000 9941 C 10000 9941 10010 9839.5 10193 9839.5" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="right" sub="true" id="line_49740730a3ea" d="M 10000 9941 C 10000 9941 10010 9914 10193 9914" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="right" sub="true" id="line_9e60d6c72294" d="M 10000 9941 C 10000 9941 10010 9976 10193 9976" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="right" sub="true" id="line_23ed65c6ba8b" d="M 10000 9941 C 10000 9941 10010 10038 10193 10038" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="right" sub="true" id="line_cc53c8b088de" d="M 10000 9941 C 10000 9941 10010 10120.5 10193 10120.5" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="right" sub="true" id="line_8701ee06b006" d="M 10000 9941 C 10000 9941 10010 10211.5 10193 10211.5" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="left" sub="true" id="line_38470479ee7c" d="M 10000 9941 C 10000 9941 9990 9743.5 9806.65625 9743.5" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="left" sub="true" id="line_bc39c0878b02" d="M 10000 9941 C 10000 9941 9990 9822.5 9807.140625 9822.5" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="left" sub="true" id="line_dc15182170b5" d="M 10000 9941 C 10000 9941 9990 9901.5 9807 9901.5" fill="none" stroke-width="2" stroke="#43a9ff"></path><path part="left" sub="true" id="line_67e8e79304eb" d="M 10000 9941 C 10000 9941 9990 9980.5 9807.328125 9980.5" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="left" sub="true" id="line_abf166125e4a" d="M 10000 9941 C 10000 9941 9990 10067.5 9807.09375 10067.5" stroke="#43a9ff" fill="none" stroke-width="2"></path><path part="left" sub="true" id="line_d365d3040aec" d="M 10000 9941 C 10000 9941 9990 10151 9807.15625 10151" fill="none" stroke-width="2" stroke="#43a9ff"></path></g><g class="svg-connection-con" transform="translate(0.5,0.5)"></g><g class="svg-freesums-con" transform="translate(0.5,0.5)"></g><g class="svg-freebos-con" transform="translate(0.5,0.5)"></g></g><g id="8701ee06b006"><rect x="1201.90625" y="579.640625" rx="6px" ry="6px" width="105" height="31" style="fill: rgb(219, 226, 227); stroke:rgb(67, 75, 84);stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(67, 75, 84)"><tspan x="1211.90625" y="600.759375"><tspan>--ensure-pip</tspan></tspan></text></g></g><g id="d6b2833599bf"><rect x="1342.65625" y="571" rx="6px" ry="6px" width="585" height="49" style="fill: rgb(219, 226, 227); stroke:rgb(67, 75, 84);stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(67, 75, 84)"><tspan x="1352.65625" y="590.4"><tspan>Add the ensurepip package to your pyz file, works for embed python on windows or </tspan></tspan><tspan x="1352.65625" y="609.4"><tspan>other python versions without `pip` installed but `lazy-install` mode is enabled.</tspan></tspan></text></g></g><g id="cc53c8b088de"><rect x="1201.90625" y="488.640625" rx="6px" ry="6px" width="143" height="31" style="fill: rgb(219, 226, 227); stroke:rgb(67, 75, 84);stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(67, 75, 84)"><tspan x="1211.90625" y="509.759375"><tspan>-up / --unzip-path</tspan></tspan></text></g></g><g id="24a4ea4ff97d"><rect x="1381.296875" y="468" rx="5px" ry="5px" width="603" height="73" style="fill: rgb(219, 226, 227); stroke:rgb(219, 226, 227);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="1391.296875" y="483.2"><tspan>If `unzip` arg is not null, cache files will be unzipped to the given path while running.</tspan></tspan><tspan x="1391.296875" y="499.2"><tspan>Defaults to `zipapps_cache`, support some internal variables: `TEMP/HOME/SELF` as internal variables, </tspan></tspan><tspan x="1391.296875" y="515.2"><tspan>`TEMP` means `tempfile.gettempdir()`, `HOME` means `Path.home()`, `SELF` means `.pyz` file path.</tspan></tspan><tspan x="1391.296875" y="531.2"><tspan>Example: `HOME/zipapps_cache`.</tspan></tspan></text></g></g><g id="23ed65c6ba8b"><rect x="1201.90625" y="406" rx="6px" ry="6px" width="96" height="32" style="fill: rgb(219, 226, 227); stroke:rgb(67, 75, 84);stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(67, 75, 84)"><tspan x="1211.90625" y="427.11875"><tspan>--sys-paths</tspan></tspan></text></g></g><g id="e8070e9ba34c"><rect x="1333.453125" y="407.96875" rx="5px" ry="5px" width="607" height="28" style="fill: rgb(219, 226, 227); stroke:rgb(219, 226, 227);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="1343.453125" y="423.934375"><tspan>Paths be insert to sys.path[-1] while running. Support TEMP/HOME/SELF prefix, separated by commas.</tspan></tspan></text></g></g><g id="9e60d6c72294"><rect x="1201.90625" y="344" rx="6px" ry="6px" width="124" height="32" style="fill: rgb(219, 226, 227); stroke:rgb(67, 75, 84);stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(67, 75, 84)"><tspan x="1211.90625" y="365.11875"><tspan>-c / --compress</tspan></tspan></text></g></g><g id="49c593a206e8"><rect x="1361.59375" y="345.96875" rx="5px" ry="5px" width="286" height="28" style="fill: rgb(219, 226, 227); stroke:rgb(219, 226, 227);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="1371.59375" y="361.934375"><tspan>compress files with the deflate method or not.</tspan></tspan></text></g></g><g id="49740730a3ea"><rect x="1201.90625" y="282" rx="6px" ry="6px" width="84" height="32" style="fill: rgb(219, 226, 227); stroke:rgb(67, 75, 84);stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(67, 75, 84)"><tspan x="1211.90625" y="303.11875"><tspan>--activate</tspan></tspan></text></g></g><g id="bdcc741450f0"><rect x="1321.96875" y="283.96875" rx="5px" ry="5px" width="598" height="28" style="fill: rgb(219, 226, 227); stroke:rgb(219, 226, 227);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="1331.96875" y="299.934375"><tspan>Activate the given paths of zipapps app, only activate them but not run them, separated by commas. </tspan></tspan></text></g></g><g id="d4aab9e1731f"><rect x="1201.90625" y="207.640625" rx="6px" ry="6px" width="177" height="31" style="fill: rgb(219, 226, 227); stroke:rgb(67, 75, 84);stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(67, 75, 84)"><tspan x="1211.90625" y="228.759375"><tspan>--zipapps / --env-paths</tspan></tspan></text></g></g><g id="611227327f6b"><rect x="1415.03125" y="195" rx="5px" ry="5px" width="400" height="57" style="fill: rgb(219, 226, 227); stroke:rgb(219, 226, 227);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="1425.03125" y="210.2"><tspan>Default --zipapps arg, which can be used as the runtime arg too.</tspan></tspan><tspan x="1425.03125" y="226.2"><tspan>The given path of zipapps will be activated and share the sys.path.</tspan></tspan><tspan x="1425.03125" y="242.2"><tspan>Support TEMP/HOME/SELF prefix, separated by commas.</tspan></tspan></text></g></g><g id="f933e667185a"><rect x="1201.90625" y="112.640625" rx="6px" ry="6px" width="114" height="31" style="fill: rgb(219, 226, 227); stroke:rgb(67, 75, 84);stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(67, 75, 84)"><tspan x="1211.90625" y="133.759375"><tspan>-b / --build-id</tspan></tspan></text></g></g><g id="65d9921ef566"><rect x="1352" y="92" rx="5px" ry="5px" width="622" height="73" style="fill: rgb(219, 226, 227); stroke:rgb(219, 226, 227);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="1362" y="107.2"><tspan>a string to skip duplicate builds, it can be the paths of files/folders which splited by ",",</tspan></tspan><tspan x="1362" y="123.2"><tspan> then the modify time will be used as build_id. If build_id contains `*`, will use `glob` function to get paths.</tspan></tspan><tspan x="1362" y="139.2"><tspan>For example, you can set requirements.txt as your build_id by </tspan></tspan><tspan x="1362" y="155.2"><tspan>`python3 -m zipapps -b requirements.txt -r requirements.txt` when you use pyz as venv.</tspan></tspan></text></g></g><g id="4eaf751f7cd5"><rect x="1201.90625" y="30" rx="6px" ry="6px" width="80" height="32" style="fill: rgb(219, 226, 227); stroke:rgb(67, 75, 84);stroke-width:0px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(67, 75, 84)"><tspan x="1211.90625" y="51.11875"><tspan>--version</tspan></tspan></text></g></g><g id="c41c5dd35b3f"><rect x="1318.390625" y="31.96875" rx="5px" ry="5px" width="119" height="28" style="fill: rgb(219, 226, 227); stroke:rgb(219, 226, 227);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="1328.390625" y="47.934375"><tspan>Show the version</tspan></tspan></text></g></g><g id="eec066a5ded1"><rect x="330.0625" y="520.96875" rx="5px" ry="5px" width="341" height="28" style="fill: rgb(230, 255, 204); stroke:rgb(230, 255, 204);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="340.0625" y="536.934375"><tspan>The path of the output file, defaults to `./zipapps_cache`</tspan></tspan></text></g></g><g id="d365d3040aec"><rect x="707.03125" y="518" rx="5px" ry="5px" width="109" height="34" style="fill: rgb(204,204,255); stroke:rgb(204,204,255);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="718.03125" y="540.11875"><tspan>-o / --output</tspan></tspan></text></g></g><g id="5f8b235fc379"><rect x="30" y="415" rx="5px" ry="5px" width="650" height="73" style="fill: rgb(204, 229, 255); stroke:rgb(204, 229, 255);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="40" y="430.2"><tspan>The names which need to be unzipped while running, splited by "," `without ext`, </tspan></tspan><tspan x="40" y="446.2"><tspan>such as `bottle,aiohttp`, or the complete path like `bin/bottle.py,temp.py`. For `.so/.pyd` files</tspan></tspan><tspan x="40" y="462.2"><tspan>(which can not be loaded by zipimport), or packages with operations of static files. if unzip is set to "*", </tspan></tspan><tspan x="40" y="478.2"><tspan>then will unzip all files and folders. if unzip is set to AUTO, then will add the `.pyd` and `.so` files automatically.</tspan></tspan></text></g></g><g id="abf166125e4a"><rect x="716.03125" y="434.640625" rx="5px" ry="5px" width="100" height="33" style="fill: rgb(204,229,255); stroke:rgb(204,229,255);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="727.03125" y="456.759375"><tspan>-u / --unzip</tspan></tspan></text></g></g><g id="a3e3e1912cca"><rect x="217.234375" y="344" rx="5px" ry="5px" width="462" height="41" style="fill: rgb(254, 240, 201); stroke:rgb(254, 240, 201);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="227.234375" y="359.2"><tspan>The entry point function of the application, the format is: </tspan></tspan><tspan x="227.234375" y="375.2"><tspan>`package` | `package.module` | `package.module:function` | `module:function`</tspan></tspan></text></g></g><g id="67e8e79304eb"><rect x="715.140625" y="347.640625" rx="5px" ry="5px" width="101" height="33" style="fill: rgb(193,255,193); stroke:rgb(193,255,193);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="726.140625" y="369.759375"><tspan>-m / --main</tspan></tspan></text></g></g><g id="5cd007033413"><rect x="223.90625" y="257" rx="5px" ry="5px" width="445" height="57" style="fill: rgb(254, 224, 198); stroke:rgb(254, 224, 198);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="233.90625" y="272.2"><tspan>The path of the Python interpreter which will be set as the `shebang line`, </tspan></tspan><tspan x="233.90625" y="288.2"><tspan>defaults to `None`. With shebang `/usr/bin/python3` you can run app with </tspan></tspan><tspan x="233.90625" y="304.2"><tspan>`./app.pyz` directly, no need for `python3 app.pyz`</tspan></tspan></text></g></g><g id="dc15182170b5"><rect x="704.8125" y="268.640625" rx="5px" ry="5px" width="111" height="33" style="fill: rgb(254,224,198); stroke:rgb(254,224,198);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="715.8125" y="290.759375"><tspan>-p / --python</tspan></tspan></text></g></g><g id="b28547f43cc7"><rect x="183.046875" y="186" rx="5px" ry="5px" width="428" height="41" style="fill: rgb(204, 204, 255); stroke:rgb(204, 204, 255);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="193.046875" y="201.2"><tspan>The given paths will be copied to `cache_path` while packaging, </tspan></tspan><tspan x="193.046875" y="217.2"><tspan>which can be used while running. The path strings will be splited by ",".</tspan></tspan></text></g></g><g id="bc39c0878b02"><rect x="646.59375" y="189.640625" rx="5px" ry="5px" width="169" height="33" style="fill: rgb(255,204,204); stroke:rgb(255,204,204);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="657.59375" y="211.759375"><tspan>-a / --add / --includes</tspan></tspan></text></g></g><g id="29c864ca56b8"><rect x="66.5625" y="99" rx="5px" ry="5px" width="579" height="57" style="fill: rgb(229, 204, 255); stroke:rgb(229, 204, 255);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="12px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="76.5625" y="114.2"><tspan>Lazy install mode.</tspan></tspan><tspan x="76.5625" y="130.2"><tspan>Install packages with pip while running, which means requirements will not be install into pyz file.</tspan></tspan><tspan x="76.5625" y="146.2"><tspan> Default unzip path will be changed to `SELF/zipapps_cache`.</tspan></tspan></text></g></g><g id="38470479ee7c"><rect x="681.453125" y="110.640625" rx="5px" ry="5px" width="134" height="33" style="fill: rgb(204,204,255); stroke:rgb(204,204,255);stroke-width:1px;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="14px" font-weight="normal" fill="rgb(103, 103, 103)"><tspan x="692.453125" y="132.759375"><tspan>-d / --lazy-install</tspan></tspan></text></g></g><g transform="translate(1201.90625, 571)" id="sdjakdjak0"><g id="subline_8701ee06b006" transform="translate(0.5,-0.5)"><path id="line_d6b2833599bf" d="M 105 24 L 123 24 L 123 24 L 140.75 24" p="8701ee06b006" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="2"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(1201.90625, 468)" id="sdjakdjak1"><g id="subline_cc53c8b088de" transform="translate(0.5,-0.5)"><path id="line_24a4ea4ff97d" d="M 143 37 L 161 37 L 161 37 L 179.390625 37" p="cc53c8b088de" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(1201.90625, 406)" id="sdjakdjak2"><g id="subline_23ed65c6ba8b" transform="translate(0.5,-0.5)"><path id="line_e8070e9ba34c" d="M 96 16 L 114 16 L 114 16 L 131.546875 16" p="23ed65c6ba8b" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(1201.90625, 344)" id="sdjakdjak3"><g id="subline_9e60d6c72294" transform="translate(0.5,-0.5)"><path id="line_49c593a206e8" d="M 124 16 L 142 16 L 142 16 L 159.6875 16" p="9e60d6c72294" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(1201.90625, 282)" id="sdjakdjak4"><g id="subline_49740730a3ea" transform="translate(0.5,-0.5)"><path id="line_bdcc741450f0" d="M 84 16 L 102 16 L 102 16 L 120.0625 16" p="49740730a3ea" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(1201.90625, 195)" id="sdjakdjak5"><g id="subline_d4aab9e1731f" transform="translate(0.5,-0.5)"><path id="line_611227327f6b" d="M 177 29 L 195 29 L 195 29 L 213.125 29" p="d4aab9e1731f" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(1201.90625, 92)" id="sdjakdjak6"><g id="subline_f933e667185a" transform="translate(0.5,-0.5)"><path id="line_65d9921ef566" d="M 114 37 L 132 37 L 132 37 L 150.09375 37" p="f933e667185a" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(1201.90625, 30)" id="sdjakdjak7"><g id="subline_4eaf751f7cd5" transform="translate(0.5,-0.5)"><path id="line_c41c5dd35b3f" d="M 80 16 L 98 16 L 98 16 L 116.484375 16" p="4eaf751f7cd5" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(330.0625, 518)" id="sdjakdjak8"><g id="subline_d365d3040aec" transform="translate(0.5,-0.5)"><path id="line_eec066a5ded1" d="M 375 16.5 L 357 16.5 L 357 16.5 L 341 16.5" p="d365d3040aec" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(30, 415)" id="sdjakdjak9"><g id="subline_abf166125e4a" transform="translate(0.5,-0.5)"><path id="line_5f8b235fc379" d="M 684 36 L 666 36 L 666 36 L 650 36" p="abf166125e4a" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(217.234375, 344)" id="sdjakdjak10"><g id="subline_67e8e79304eb" transform="translate(0.5,-0.5)"><path id="line_a3e3e1912cca" d="M 496 20 L 478 20 L 478 20 L 462 20" p="67e8e79304eb" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(223.90625, 257)" id="sdjakdjak11"><g id="subline_dc15182170b5" transform="translate(0.5,-0.5)"><path id="line_5cd007033413" d="M 479 28 L 461 28 L 461 28 L 445 28" p="dc15182170b5" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(183.046875, 186)" id="sdjakdjak12"><g id="subline_bc39c0878b02" transform="translate(0.5,-0.5)"><path id="line_b28547f43cc7" d="M 462 20 L 444 20 L 444 20 L 428 20" p="bc39c0878b02" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(66.5625, 99)" id="sdjakdjak13"><g id="subline_38470479ee7c" transform="translate(0.5,-0.5)"><path id="line_29c864ca56b8" d="M 613 28 L 595 28 L 595 28 L 579 28" p="38470479ee7c" stroke="#43a9ff" fill="none" stroke-linecap="square" stroke-width="1"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(895.90625, 296)" id="sdjakdjak14"><g id="subline_root" transform="translate(0.5,-0.5)"></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g id="root"><rect x="895.90625" y="296" rx="5px" ry="5px" width="226" height="58" style="fill: #50C28B; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-family="微软雅黑" font-size="26px" font-weight="normal" fill="rgb(255, 255, 255)"><tspan x="907.90625" y="333.584375"><tspan>Zipapps Arg List</tspan></tspan></text></g></g></svg>